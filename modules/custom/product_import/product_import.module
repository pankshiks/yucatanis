<?php

  use Drupal\commerce_product\Entity\Product;
  use Drupal\commerce_product\Entity\ProductVariation;

  function Upload_product($value) {

    $type ='boat_rentals';
    $product = product_create_update($type,$value[0]);

    if(!empty($value[0])){
      
      if($vid = 'boat_category'){
        $boat_term_value =  vocab($vid,$value[2]);
      }

      if($vid = 'make'){
        $make_term_value = vocab($vid, $value[4]);
      }

      if($vid = 'location'){
        $location_term_value = vocab($vid,$value[8]);
    
        }

      if($vid ='included'){
        $included_term_value=vocab($vid,$value[12]);   
      }
      
      if($vid ='optional_inclusions'){
        $optional_inclusions_term_value = vocab($vid,$value[13]);
      }

      if($vid ='restrictions'){
        $restrictions_term_value = vocab($vid,$value[14]);
      }
      
      if($vid ='not_included'){
    
        $not_included_term_value = vocab($vid,$value[15]);
      }
      
      if($vid ='informative_tags'){
        $informative_tag_term_value= vocab($vid,$value[18]);
      }

      $current_timestamp = time();
      // Format current time in 'Y-m-d H:i:s' format
      $current_time = date('Y-m-d H:i:s', $current_timestamp);
      $string = trim($value[16], '"');
    // Split the string by comma
    $dates = explode('","', $string);

    // Extract start and end dates
    $start_date_iso = $dates[0] . 'T' . date('H:i:s', $current_timestamp); // Append current time to the start date in ISO format
    $end_date_iso = $dates[1] . 'T' . date('H:i:s', $current_timestamp);

    $product->title->value =$value[0];
    $product->field_product_image->value =$value[1];
    $product->field_boat_category= $boat_term_value;
    $product->field_id->value=$value[3];
    $product->field_make_ = $make_term_value;
    $product->field_loa_ft->value=$value[5];
    $product->field_max_passenger_capacity->value=$value[6];
    $product->body->value=$value[7];
    $product->field_location =  $location_term_value;
    $product->field_available_for_rent->value=[
    "value" => $value[9]
    ];
    $product->field_available_for_sale->value=[
    "value" =>$value[10]
    ];
    $total_seconds = $value[11] * 24 * 3600; // Convert fraction of a day to seconds
    $time_format = round($total_seconds);
    $product->field_suggested_departure->value =$time_format;
    $product->field_included =$included_term_value;
    $product->field_optiona= $optional_inclusions_term_value;
    $product->field_restrictionss =  $restrictions_term_value;
    $product->field_not_included = $not_included_term_value;

    $product->field_blackout_dates=[
      "value" =>$start_date_iso,
      "end_value" =>$end_date_iso ,
    ];

    $product->field_informative_tags=$informative_tag_term_value;
    $product->save();
    }
}



function Upload_product_classic($value) {
 
  $type='shop_classic_experiences';
  $product = product_create_update($type,$value[1]);

  if(!empty($value[1]) ){

  if($vid = 'distinctions'){
    
    $distinctions_term_value = vocab($vid,$value[4]);

  }
  if($vid = 'convenience'){
    $convenience_term_value  = vocab($vid,$value[5]);
  }
  
  if($vid ='included'){
    $included_term_value= vocab($vid,$value[6]);
  }
  
  if($vid ='not_included'){
    $not_included_term_value = vocab($vid, $value[7]);
  }
  if($vid ='fragments_of_yucatan'){
    $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);
    if ($vocabulary) {
      $tree = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree(
        'fragments_of_yucatan', 79,1,TRUE             
      );
      $tid = [];  
      foreach ($tree as $term) {
         $tid[] = $term->get('tid')->value;
      }
      $array = explode(",",$value[8]);
      foreach($array as $key=>$term_val)
      {
        $query = \Drupal::entityQuery('taxonomy_term')->accessCheck(TRUE);
        $query->condition('name', $term_val);
        $query->condition('vid', $vocabulary->id());
        $tids = $query->execute();
        $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);
        foreach ($terms as $term) {
          $term_value_ids[] = $term->id();
        }
      }
       $term_value_id = []; 
       if (isset($term_value_ids)) {
        foreach ($term_value_ids as $target_id){
          if (in_array($target_id, $tid)) {
            $term_value_id[] = ['target_id' => $target_id];
          }
        } 
      }
      $fragments_of_yucatan_term_value= $term_value_id;
    }
  }
  if($vid = 'location'){
    $location_term_value =vocab($vid,$value[9]);

  }
  if($vid ='fate'){
    $fate_term_value=vocab($vid,$value[12]);
    }
  
  if($vid ='moods_list'){

    $moods_term_value =vocab($vid,$value[15]);
  }
  if($vid ='mandatory'){
    $mandatory_term_value=vocab($vid, $value[17]);
  }
  if($vid ='restrictions'){

    $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);

    if ($vocabulary) {
      
      $query = \Drupal::entityQuery('taxonomy_term')->accessCheck(TRUE);
      $query->condition('name', $value[18]);
      $query->condition('vid', $vocabulary->id());
      $tids = $query->execute();
      $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);

      }

      if(!empty($terms)){
      $term_val=array_values($terms);
      $restrictions_term_value =$term_val[0]->get('name')->value;
  
    }
  }
  if($vid ='yucatanis_recommends'){
    $yucatanis_recommend_term_value =vocab($vid, $value[19]);
  }
  if($vid ='available_add_ons'){
    $add_ons_term_value  =vocab($vid, $value[20]);
  }
  if($vid ='informative_tags'){
    $informative_tag_term_value=vocab($vid, $value[21]);
  }
  
  $current_timestamp = time();
  // Format current time in 'Y-m-d H:i:s' format
  $current_time = date('Y-m-d H:i:s', $current_timestamp);
  if (isset($value[16])) {
    $string = trim($value[16], '"');
  }else {
    $string = ''; 
  }
  $dates = explode('","', $string);
  $start_date_iso = $dates[0] . 'T' . date('H:i:s', $current_timestamp); // Append current time to the start date in ISO format
  if (isset($dates[1])) {
  $end_date_iso = $dates[1] . 'T' . date('H:i:s', $current_timestamp);
  }else {
  $end_date_iso = ''; 
  }  
  $product->field_no_id=$value[0];
  $product->title->value=$value[1];
  $product->body->value=$value[2];
  $product->field_product_image->value=$value[3];
  $product->field_distinction=$distinctions_term_value;
  $product->field_convenience=$convenience_term_value;
  $product->field_inclusions_list=$value[6];
  $product->field_excluded_attributes=$value[7];
  $product->field_sub_type=$fragments_of_yucatan_term_value;
  $product->field_relatively_closer_to=$location_term_value;
  $product->field_duration=[
   "value" =>$value[10]
  ];
  $total_seconds = $value[11] * 24 * 3600; // Convert fraction of a day to seconds
  $time_format = round($total_seconds);
  $product->field_tour_start_time->value=$time_format;
  $product->field_fates=$fate_term_value;
  $product->field_privately_available=$value[13];
  $product->field_all_weather_activity=$value[14];
  $product->field_mood=$moods_term_value;
  $product->field_hotel_information=[
    "value" =>  $start_date_iso,
    "end_value" =>$end_date_iso,
  
  ];
  $product->field_mandatorys = $mandatory_term_value;
  $product-> field_restrictions= $restrictions_term_value;
  $product->field_yucatanis_recommend=$yucatanis_recommend_term_value;
  $product-> field_available_add_ons=$add_ons_term_value;
  $product->field_informative_tags=$informative_tag_term_value;
  $product->save();

  }
}
  

function Upload_product_essential($value) {
  $type='essential_rarities';
  $product  = product_create_update($type,$value[1]);

     if(!empty($value[1])){

      if($vid = 'distinctions'){
    
        $distinctions_term_value = vocab($vid,$value[4]);
    
      }
      if($vid = 'convenience'){
        $convenience_term_value  = vocab($vid,$value[5]);
      }
      
      if($vid ='included'){
        $included_term_value= vocab($vid,$value[6]);
      }
      
      if($vid ='not_included'){
        $not_included_term_value = vocab($vid, $value[7]);
      }
      if($vid ='fragments_of_yucatan'){
        $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);
        if ($vocabulary) {
          $tree = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree(
            'fragments_of_yucatan', 22,1,TRUE             
          );
          $tid = [];  
          foreach ($tree as $term) {
             $tid[] = $term->get('tid')->value;
          }
          $array = explode(",",$value[8]);
          foreach($array as $key=>$term_val)
          {
            $query = \Drupal::entityQuery('taxonomy_term')->accessCheck(TRUE);
            $query->condition('name', $term_val);
            $query->condition('vid', $vocabulary->id());
            $tids = $query->execute();
            $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);
            foreach ($terms as $term) {
              $term_value_ids[] = $term->id();
            }
          }
           $term_value_id = []; 
           if (isset($term_value_ids)) {
            foreach ($term_value_ids as $target_id){
              if (in_array($target_id, $tid)) {
                $term_value_id[] = ['target_id' => $target_id];
              }
            } 
          }
          $fragments_of_yucatan_term_value= $term_value_id;
        }
      }
      if($vid = 'location'){
        $location_term_value =vocab($vid,$value[9]);
    
      }
      if($vid ='fate'){
        $fate_term_value=vocab($vid,$value[12]);
        }
      
      if($vid ='moods_list'){
    
        $moods_term_value =vocab($vid,$value[15]);
      }
      if($vid ='mandatory'){
        $mandatory_term_value=vocab($vid, $value[17]);
      }
      if($vid ='restrictions'){

        $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);
        if ($vocabulary) {  
          $query = \Drupal::entityQuery('taxonomy_term')->accessCheck(TRUE);
          $query->condition('name', $value[18]);
          $query->condition('vid', $vocabulary->id());
          $tids = $query->execute();
          $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);
          }
          if(!empty($terms)){
          $term_val=array_values($terms);
          $restrictions_term_value =$term_val[0]->get('name')->value;
        }
      }
      if($vid ='yucatanis_recommends'){
        $yucatanis_recommend_term_value =vocab($vid, $value[19]);
      }
      if($vid ='available_add_ons'){
        $add_ons_term_value  =vocab($vid, $value[20]);
      }
      if($vid ='informative_tags'){
        $informative_tag_term_value=vocab($vid, $value[21]);
      }

      $current_timestamp = time();
      // Format current time in 'Y-m-d H:i:s' format
      $current_time = date('Y-m-d H:i:s', $current_timestamp);
      if (isset($value[16]) && is_string($value[16])) {
        $string = trim($value[16], '"');
      }
      $dates = [];
      $start_date_iso = '';
      $end_date_iso = '' ;
      if(isset($strng)){
      $dates = explode('","', $string);
      }
      if(isset($dates)&& isset($dates[0])&& isset($dates[1]))
      {
      $start_date_iso = $dates[0] . 'T' . date('H:i:s', $current_timestamp); 
      $end_date_iso = $dates[1] . 'T' . date('H:i:s', $current_timestamp);
      }
      $product->field_no_id=$value[0];
      $product->title->value=$value[1];
      $product->body->value=$value[2];
      $product->field_product_image->value=$value[3];
      $product->field_distinction = $distinctions_term_value;
      $product->field_convenience = $convenience_term_value;
      $product->field_inclusions_list = $value[6];
      $product->field_excluded_attributes = $value[7];
      $product->field_sub_type = $fragments_of_yucatan_term_value;
      $product->field_relatively_closer_to = $location_term_value;
      $product->field_duration=[
       "value" =>$value[10]
      ];
      $total_seconds = $value[11] * 24 * 3600; // Convert fraction of a day to seconds
      $time_format = round($total_seconds);
      $product->field_tour_start_time->value = $time_format;
      $product->field_fates=$fate_term_value;
      $product->field_privately_available=$value[13];
      $product->field_all_weather_activity=$value[14];
      $product->field_mood=$moods_term_value;
      $product->field_hotel_information=[
        "value" =>  $start_date_iso,
        "end_value" =>$end_date_iso,
      
      ];
      $product->field_mandatorys=$mandatory_term_value;
      $product->field_restriction= $restrictions_term_value;
      $product->field_yucatanis_recommend=$yucatanis_recommend_term_value;
      $product->field_available_add_ons=$add_ons_term_value;
      $product->field_informative_tags=$informative_tag_term_value;
      $product->save();
    }
  }

function vocab($vid,$val){
  $vocabulary = \Drupal\taxonomy\Entity\Vocabulary::load($vid);
  $array = explode(",",$val);
  if ($vocabulary) {
    foreach($array  as $key=>$term_val){
      $query = \Drupal::entityQuery('taxonomy_term')->accessCheck(TRUE);
      $query->condition('name',$term_val);
      $query->condition('vid', $vocabulary->id());
      $tids = $query->execute();
      $terms = \Drupal\taxonomy\Entity\Term::loadMultiple($tids);
      foreach ($terms as $term) {
        $term_value_ids[] = $term->id();
      }
    }
  }
  $term_value_id = []; 
  if (isset($term_value_ids)) {
    foreach ($term_value_ids as $target_id) {
     $term_value_id[] = ['target_id' => $target_id];
    } 
  }
  return $term_value_id;
}

function product_create_update($type,$value){
  $product = NULL; // Initialize $product
  $values = \Drupal::entityQuery('commerce_product')
  ->condition('title',$value)
  ->condition('type',$type)
  ->accessCheck(TRUE)->execute();

  if(empty($values) && !empty($value)){

    $variation = ProductVariation::create([
      'type' => $type,
      'sku' => $value,
    ]);
    $variation->save();   
    
    $product = Product::create([
      'type'=>$type,
      'variations'=>$variation 
    ]);
  }
  else{
    foreach($values as $pid){
      $product = Product::load($pid);
      if($title = $value){
        $product = Product::load($pid);
      }
    }
  }
  return  $product;
}