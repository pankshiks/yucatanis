{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{# {{dump(paragraph.field_view_type.value)}} #}
{% if paragraph.field_view_type.value == 'Categories' %}

    <section class="categories-card">
    <div class="container">
    <div class="title-wrap">
      {{ paragraph.field_sub_heading.value|raw}}
      </div>
      {{ paragraph.field_view|view }}
    </div>
    </section> 
 {% elseif  paragraph.field_view_type.value == 'Blog posts' %}
    <section class="blog-post">
    <div class="container ptb-200">
      <h2 class="orange-color">{{ paragraph.field_heading_list.value|raw }}</h2>
      {{ paragraph.field_sub_heading.value|raw}}     
      
       {# {{ drupal_view('blogpost_slider', 'block_1') }} #}
       {{ drupal_view('blog', 'block_1') }}
      {# {{ paragraph.field_view|view }} #}
     
    </div>
    </section>
  
  {% elseif  paragraph.field_view_type.value == 'Testimonials slider' %}
      <section class="testimonial-slider ptb-200 bg-pink">
      <div class="container">
        <div class="row">
          <div class="col-12">
            <h2>Latest <span class="orange-color">{{ paragraph.field_heading_list.value|raw }}</h2>
            {{ paragraph.field_sub_heading.value |raw}}
          </div>
        </div>
      </div>
        {{ paragraph.field_view|view }}
      </section>

  {% elseif  paragraph.field_view_type.value == 'Full Region Categorization' %}
    <section class="categorization ptb-200">
      <div class="container">
           {{ paragraph.field_sub_heading.value |raw}}
      </div> 
      {{ paragraph.field_view|view }}
    </section>

{% elseif  paragraph.field_view_type.value == 'Product categories' %}
    <section class="top-rated-experiences">
      <div class="container">
      {% if paragraph.field_heading_list.value is not empty %}
      
      {% set title = paragraph.field_heading_list.value|raw %}
      {% set titleParts = title|split(' ') %}
      {% set firstPart = titleParts|length > 0 ? titleParts|slice(0, 1)|join(' ') : title %}
      {% set secondPart = titleParts|length > 1 ? titleParts|slice(1, titleParts|length - 1)|join(' ') : '' %}

      <h2 class="orange-color  main-title {{ firstPart|clean_class }}">
        {{ firstPart }}
        {% if secondPart %}
          <span class="d-brown">{{ secondPart }}</span>
        {% endif %}
      </h2>
      {% endif %}  
      {{ paragraph.field_sub_heading.value |raw}}
      {{ paragraph.field_view|view }}
      </div>
    </section>

{% else %}     
 
    <section class="top-rated-experiences">
    <div class="container">
      {# <h3 class="d-brown">{{ paragraph.field_heading_list.value }}</h3> #}
      {{ paragraph.field_sub_heading.value |raw}}

        {{ paragraph.field_view|view }}
    </div>
    </section>

{% endif %}